{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "type": "string",
            "defaultValue": "-rotafnapp",
            "metadata": {
                "description": "The name of the function app that you wish to assign policies and use as an endpoint."
            }
        },
        "storageAccountNames": {
            "type": "array",
            "defaultValue": [
                {"RG": "placeholderResourceGroup", "storageName": "placeholderStorageName1"},
                {"RG": "placeholderResourceGroup", "storageName": "placeholderStorageName2"}
            ],
            "metadata": {
                "description": "The names of the storage accounts with keys to rotate that are deployed to the resource group above."
            }
        },
        "keyVaultsForAccessPolicies": {
            "type": "array",
            "defaultValue": [
                {"RG": "placeholderResourceGroup", "keyVaultName": "placeholderKeyVault1"},
                {"RG": "placeholderResourceGroup", "keyVaultName": "placeholderKeyVault2"}
            ],
            "metadata": {
                "description": "The names of the key vaults to add the function app's identity to for access policies."
            }
        },
        "keyVaultSecretObjects": {
            "type": "array",
            "defaultValue": [
                {"RG": "placeholderResourceGroup", "keyVaultName": "placeholderKeyVault1", "secretName": "placeholderkey1"},
                {"RG": "placeholderResourceGroup", "keyVaultName": "placeholderKeyVault1", "secretName": "placeholderkey2"},
                {"RG": "placeholderResourceGroup", "keyVaultName": "placeholderKeyVault2", "secretName": "placeholderkey3"}
            ],
            "metadata": {
                "description": "An array of keyvault objects with corresponding secret key names in that key vault, these are deployed to the resource group above."
            }
        }
    },
    "variables": {
		"eventSubscriptionName": "[concat(parameters('functionAppName'),'-','eventSubscription')]"
    },
    "resources": [
        {
            "name": "[concat('kv-policy-grant-access-', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[parameters('keyVaultsForAccessPolicies')[copyIndex()].RG]",
            "dependsOn": [
            ],
            "copy": {
                "name": "kv-access-policy-loop",
                "count": "[length(parameters('keyVaultsForAccessPolicies'))]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(parameters('keyVaultsForAccessPolicies')[copyIndex()].keyVaultName, '/add')]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[subscription().tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'2019-08-01', 'Full').identity.principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "Get",
                                                "List",
                                                "Set"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat('kv-subscription-creation-', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[parameters('keyVaultSecretObjects')[copyIndex()].RG]",
            "dependsOn": [
            ],
            "copy": {
                "name": "key-vault-subscription-loop",
                "count": "[length(parameters('keyVaultSecretObjects'))]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/providers/eventSubscriptions",
                            "apiVersion": "2020-01-01-preview",
                            "name": "[concat(parameters('keyVaultSecretObjects')[copyIndex()].keyVaultName,'/Microsoft.EventGrid/',variables('eventSubscriptionName'), '-', parameters('keyVaultSecretObjects')[copyIndex()].secretName)]",
                            "location": "[resourceGroup().location]",

                            "properties": {
                                "destination": {
                                    "endpointType": "AzureFunction",
                                    "properties": {
                                        "maxEventsPerBatch": 1,
                                        "preferredBatchSizeInKilobytes": 64,
                                        "resourceId": "[concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'/functions/AKVStorageRotation')]"
                                    }
                                },
                                "filter": {
                                    "subjectBeginsWith": "[parameters('keyVaultSecretObjects')[copyIndex()].secretName]",
                                    "subjectEndsWith": "[parameters('keyVaultSecretObjects')[copyIndex()].secretName]",
                                    "includedEventTypes": ["Microsoft.KeyVault.SecretNearExpiry"]
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat('storage-grant-access-', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[parameters('storageAccountNames')[copyIndex()].RG]",
            "dependsOn": [
            ],
            "copy": {
                "name": "storage-account-loop",
                "count": "[length(parameters('storageAccountNames'))]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[concat(parameters('storageAccountNames')[copyIndex()].storageName, '/Microsoft.Authorization/', guid(concat(parameters('storageAccountNames')[copyIndex()].storageName, reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'2019-08-01', 'Full').identity.principalId)))]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '81a9662b-bebf-436f-a333-f67b29880f12')]",
                                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'2019-08-01', 'Full').identity.principalId]"
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[concat(parameters('storageAccountNames')[copyIndex()].storageName, '/Microsoft.Authorization/', guid(concat(parameters('storageAccountNames')[copyIndex()].storageName, reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'2019-08-01', 'Full').identity.principalId)))]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')),'2019-08-01', 'Full').identity.principalId]"
                            }
                        }
                    ]
                }
            }
        }
    ]
}
